/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

version = '0.1.1'
group = 'io.github.projectclean'

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}
Properties properties = new Properties()
properties.load(project.rootProject.file('lib/gradle.properties').newDataInputStream())
// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.

publishing {
    publications{

        mavenJava(MavenPublication){

            groupId = 'io.github.projectclean'
            artifactId = 'deconfuse'
            version = '0.1.1'
            from components.java

            pom {
                name = 'DeConfuse'
                description = 'DeConfuse is a java librabry which convert confusable unicode characters(similar looking character) or string to english alphabets/strings.'
                url = 'https://github.com/ProjectClean/deconfuse'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'PushpamK'
                        name = 'Pushpam Kumar'
                        email = 'pushpam.kumar.projectclean@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/ProjectClean/deconfuse.git'
                    developerConnection = 'scm:git:ssh://github.com/ProjectClean/deconfuse.git'
                    url = 'https://github.com/ProjectClean/deconfuse'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}